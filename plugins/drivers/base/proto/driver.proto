syntax = "proto3";
package hashicorp.nomad.plugins.drivers.base.proto;
option go_package = "proto";

import "google/protobuf/empty.proto";
//import "google/protobuf/timestamp.proto";

service Driver {
    rpc RecoverTask(RecoverTaskRequest) returns (google.protobuf.Empty) {}
    rpc StartTask(StartTaskRequest) returns (StartTaskResponse) {}
	rpc WaitTask(WaitTaskRequest) returns(WaitTaskResponse) {}
}

message RecoverTaskRequest {
    string task_id = 1;
    TaskHandle handle = 2;
}

message StartTaskRequest {
    TaskConfig task = 1;
}

message TaskConfig {
    string id = 1;
    string user = 2;
    bytes msgpack_driver_config = 3;
    map<string, string> env = 4;
    Resources resources = 5;
    repeated Mount mounts = 6;
    repeated Device devices = 7;
}

message Resources {
    // CPU CFS (Completely Fair Scheduler) period. Default: 0 (not specified).
    int64 cpu_period = 1;
    // CPU CFS (Completely Fair Scheduler) quota. Default: 0 (not specified).
    int64 cpu_quota = 2;
    // CPU shares (relative weight vs. other containers). Default: 0 (not specified).
    int64 cpu_shares = 3;
    // Memory limit in bytes. Default: 0 (not specified).
    int64 memory_limit_in_bytes = 4;
    // OOMScoreAdj adjusts the oom-killer score. Default: 0 (not specified).
    int64 oom_score_adj = 5;
    // CpusetCpus constrains the allowed set of logical CPUs. Default: "" (not specified).
    string cpuset_cpus = 6;
    // CpusetMems constrains the allowed set of memory nodes. Default: "" (not specified).
    string cpuset_mems = 7;
}

message Mount {
    string task_path = 1;
    string host_path = 2;
    bool readonly = 3;
}

message Device {
    string task_path = 1;
    string host_path = 2;
    string permissions = 3;
}

message StartTaskResponse {
    TaskHandle handle = 1;
}

message TaskHandle {
    string driver = 1;
    TaskConfig config = 2;
    string state = 3;
    bytes msgpack_driver_state = 4;
}

message WaitTaskRequest {
    string task_id = 1;
}

message WaitTaskResponse {
    int32 exit_code = 1;
    int32 signal = 2;
    string err = 3;
}
