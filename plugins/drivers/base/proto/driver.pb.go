// Code generated by protoc-gen-go. DO NOT EDIT.
// source: driver.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RecoverTaskRequest struct {
	TaskId               string      `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Handle               *TaskHandle `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RecoverTaskRequest) Reset()         { *m = RecoverTaskRequest{} }
func (m *RecoverTaskRequest) String() string { return proto.CompactTextString(m) }
func (*RecoverTaskRequest) ProtoMessage()    {}
func (*RecoverTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{0}
}
func (m *RecoverTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoverTaskRequest.Unmarshal(m, b)
}
func (m *RecoverTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoverTaskRequest.Marshal(b, m, deterministic)
}
func (dst *RecoverTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoverTaskRequest.Merge(dst, src)
}
func (m *RecoverTaskRequest) XXX_Size() int {
	return xxx_messageInfo_RecoverTaskRequest.Size(m)
}
func (m *RecoverTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoverTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecoverTaskRequest proto.InternalMessageInfo

func (m *RecoverTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *RecoverTaskRequest) GetHandle() *TaskHandle {
	if m != nil {
		return m.Handle
	}
	return nil
}

type StartTaskRequest struct {
	Task                 *TaskConfig `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StartTaskRequest) Reset()         { *m = StartTaskRequest{} }
func (m *StartTaskRequest) String() string { return proto.CompactTextString(m) }
func (*StartTaskRequest) ProtoMessage()    {}
func (*StartTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{1}
}
func (m *StartTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTaskRequest.Unmarshal(m, b)
}
func (m *StartTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTaskRequest.Marshal(b, m, deterministic)
}
func (dst *StartTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTaskRequest.Merge(dst, src)
}
func (m *StartTaskRequest) XXX_Size() int {
	return xxx_messageInfo_StartTaskRequest.Size(m)
}
func (m *StartTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTaskRequest proto.InternalMessageInfo

func (m *StartTaskRequest) GetTask() *TaskConfig {
	if m != nil {
		return m.Task
	}
	return nil
}

type TaskConfig struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User                 string            `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	MsgpackDriverConfig  []byte            `protobuf:"bytes,3,opt,name=msgpack_driver_config,json=msgpackDriverConfig,proto3" json:"msgpack_driver_config,omitempty"`
	Env                  map[string]string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Resources            *Resources        `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	Mounts               []*Mount          `protobuf:"bytes,6,rep,name=mounts,proto3" json:"mounts,omitempty"`
	Devices              []*Device         `protobuf:"bytes,7,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TaskConfig) Reset()         { *m = TaskConfig{} }
func (m *TaskConfig) String() string { return proto.CompactTextString(m) }
func (*TaskConfig) ProtoMessage()    {}
func (*TaskConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{2}
}
func (m *TaskConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskConfig.Unmarshal(m, b)
}
func (m *TaskConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskConfig.Marshal(b, m, deterministic)
}
func (dst *TaskConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskConfig.Merge(dst, src)
}
func (m *TaskConfig) XXX_Size() int {
	return xxx_messageInfo_TaskConfig.Size(m)
}
func (m *TaskConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TaskConfig proto.InternalMessageInfo

func (m *TaskConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaskConfig) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *TaskConfig) GetMsgpackDriverConfig() []byte {
	if m != nil {
		return m.MsgpackDriverConfig
	}
	return nil
}

func (m *TaskConfig) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *TaskConfig) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *TaskConfig) GetMounts() []*Mount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *TaskConfig) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type Resources struct {
	// CPU CFS (Completely Fair Scheduler) period. Default: 0 (not specified).
	CpuPeriod int64 `protobuf:"varint,1,opt,name=cpu_period,json=cpuPeriod,proto3" json:"cpu_period,omitempty"`
	// CPU CFS (Completely Fair Scheduler) quota. Default: 0 (not specified).
	CpuQuota int64 `protobuf:"varint,2,opt,name=cpu_quota,json=cpuQuota,proto3" json:"cpu_quota,omitempty"`
	// CPU shares (relative weight vs. other containers). Default: 0 (not specified).
	CpuShares int64 `protobuf:"varint,3,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	// Memory limit in bytes. Default: 0 (not specified).
	MemoryLimitInBytes int64 `protobuf:"varint,4,opt,name=memory_limit_in_bytes,json=memoryLimitInBytes,proto3" json:"memory_limit_in_bytes,omitempty"`
	// OOMScoreAdj adjusts the oom-killer score. Default: 0 (not specified).
	OomScoreAdj int64 `protobuf:"varint,5,opt,name=oom_score_adj,json=oomScoreAdj,proto3" json:"oom_score_adj,omitempty"`
	// CpusetCpus constrains the allowed set of logical CPUs. Default: "" (not specified).
	CpusetCpus string `protobuf:"bytes,6,opt,name=cpuset_cpus,json=cpusetCpus,proto3" json:"cpuset_cpus,omitempty"`
	// CpusetMems constrains the allowed set of memory nodes. Default: "" (not specified).
	CpusetMems           string   `protobuf:"bytes,7,opt,name=cpuset_mems,json=cpusetMems,proto3" json:"cpuset_mems,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{3}
}
func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (dst *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(dst, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetCpuPeriod() int64 {
	if m != nil {
		return m.CpuPeriod
	}
	return 0
}

func (m *Resources) GetCpuQuota() int64 {
	if m != nil {
		return m.CpuQuota
	}
	return 0
}

func (m *Resources) GetCpuShares() int64 {
	if m != nil {
		return m.CpuShares
	}
	return 0
}

func (m *Resources) GetMemoryLimitInBytes() int64 {
	if m != nil {
		return m.MemoryLimitInBytes
	}
	return 0
}

func (m *Resources) GetOomScoreAdj() int64 {
	if m != nil {
		return m.OomScoreAdj
	}
	return 0
}

func (m *Resources) GetCpusetCpus() string {
	if m != nil {
		return m.CpusetCpus
	}
	return ""
}

func (m *Resources) GetCpusetMems() string {
	if m != nil {
		return m.CpusetMems
	}
	return ""
}

type Mount struct {
	TaskPath             string   `protobuf:"bytes,1,opt,name=task_path,json=taskPath,proto3" json:"task_path,omitempty"`
	HostPath             string   `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	Readonly             bool     `protobuf:"varint,3,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mount) Reset()         { *m = Mount{} }
func (m *Mount) String() string { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()    {}
func (*Mount) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{4}
}
func (m *Mount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mount.Unmarshal(m, b)
}
func (m *Mount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mount.Marshal(b, m, deterministic)
}
func (dst *Mount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mount.Merge(dst, src)
}
func (m *Mount) XXX_Size() int {
	return xxx_messageInfo_Mount.Size(m)
}
func (m *Mount) XXX_DiscardUnknown() {
	xxx_messageInfo_Mount.DiscardUnknown(m)
}

var xxx_messageInfo_Mount proto.InternalMessageInfo

func (m *Mount) GetTaskPath() string {
	if m != nil {
		return m.TaskPath
	}
	return ""
}

func (m *Mount) GetHostPath() string {
	if m != nil {
		return m.HostPath
	}
	return ""
}

func (m *Mount) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type Device struct {
	TaskPath             string   `protobuf:"bytes,1,opt,name=task_path,json=taskPath,proto3" json:"task_path,omitempty"`
	HostPath             string   `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	Permissions          string   `protobuf:"bytes,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{5}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (dst *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(dst, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetTaskPath() string {
	if m != nil {
		return m.TaskPath
	}
	return ""
}

func (m *Device) GetHostPath() string {
	if m != nil {
		return m.HostPath
	}
	return ""
}

func (m *Device) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

type StartTaskResponse struct {
	Handle               *TaskHandle `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StartTaskResponse) Reset()         { *m = StartTaskResponse{} }
func (m *StartTaskResponse) String() string { return proto.CompactTextString(m) }
func (*StartTaskResponse) ProtoMessage()    {}
func (*StartTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{6}
}
func (m *StartTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTaskResponse.Unmarshal(m, b)
}
func (m *StartTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTaskResponse.Marshal(b, m, deterministic)
}
func (dst *StartTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTaskResponse.Merge(dst, src)
}
func (m *StartTaskResponse) XXX_Size() int {
	return xxx_messageInfo_StartTaskResponse.Size(m)
}
func (m *StartTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartTaskResponse proto.InternalMessageInfo

func (m *StartTaskResponse) GetHandle() *TaskHandle {
	if m != nil {
		return m.Handle
	}
	return nil
}

type TaskHandle struct {
	Driver               string      `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Config               *TaskConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	State                string      `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	MsgpackDriverState   []byte      `protobuf:"bytes,4,opt,name=msgpack_driver_state,json=msgpackDriverState,proto3" json:"msgpack_driver_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TaskHandle) Reset()         { *m = TaskHandle{} }
func (m *TaskHandle) String() string { return proto.CompactTextString(m) }
func (*TaskHandle) ProtoMessage()    {}
func (*TaskHandle) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{7}
}
func (m *TaskHandle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskHandle.Unmarshal(m, b)
}
func (m *TaskHandle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskHandle.Marshal(b, m, deterministic)
}
func (dst *TaskHandle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskHandle.Merge(dst, src)
}
func (m *TaskHandle) XXX_Size() int {
	return xxx_messageInfo_TaskHandle.Size(m)
}
func (m *TaskHandle) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskHandle.DiscardUnknown(m)
}

var xxx_messageInfo_TaskHandle proto.InternalMessageInfo

func (m *TaskHandle) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *TaskHandle) GetConfig() *TaskConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *TaskHandle) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *TaskHandle) GetMsgpackDriverState() []byte {
	if m != nil {
		return m.MsgpackDriverState
	}
	return nil
}

type WaitTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitTaskRequest) Reset()         { *m = WaitTaskRequest{} }
func (m *WaitTaskRequest) String() string { return proto.CompactTextString(m) }
func (*WaitTaskRequest) ProtoMessage()    {}
func (*WaitTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{8}
}
func (m *WaitTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitTaskRequest.Unmarshal(m, b)
}
func (m *WaitTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitTaskRequest.Marshal(b, m, deterministic)
}
func (dst *WaitTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitTaskRequest.Merge(dst, src)
}
func (m *WaitTaskRequest) XXX_Size() int {
	return xxx_messageInfo_WaitTaskRequest.Size(m)
}
func (m *WaitTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitTaskRequest proto.InternalMessageInfo

func (m *WaitTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type WaitTaskResponse struct {
	ExitCode             int32    `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Signal               int32    `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitTaskResponse) Reset()         { *m = WaitTaskResponse{} }
func (m *WaitTaskResponse) String() string { return proto.CompactTextString(m) }
func (*WaitTaskResponse) ProtoMessage()    {}
func (*WaitTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_driver_54fd5cea61d6363e, []int{9}
}
func (m *WaitTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitTaskResponse.Unmarshal(m, b)
}
func (m *WaitTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitTaskResponse.Marshal(b, m, deterministic)
}
func (dst *WaitTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitTaskResponse.Merge(dst, src)
}
func (m *WaitTaskResponse) XXX_Size() int {
	return xxx_messageInfo_WaitTaskResponse.Size(m)
}
func (m *WaitTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WaitTaskResponse proto.InternalMessageInfo

func (m *WaitTaskResponse) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *WaitTaskResponse) GetSignal() int32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

func (m *WaitTaskResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*RecoverTaskRequest)(nil), "hashicorp.nomad.plugins.drivers.base.proto.RecoverTaskRequest")
	proto.RegisterType((*StartTaskRequest)(nil), "hashicorp.nomad.plugins.drivers.base.proto.StartTaskRequest")
	proto.RegisterType((*TaskConfig)(nil), "hashicorp.nomad.plugins.drivers.base.proto.TaskConfig")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.nomad.plugins.drivers.base.proto.TaskConfig.EnvEntry")
	proto.RegisterType((*Resources)(nil), "hashicorp.nomad.plugins.drivers.base.proto.Resources")
	proto.RegisterType((*Mount)(nil), "hashicorp.nomad.plugins.drivers.base.proto.Mount")
	proto.RegisterType((*Device)(nil), "hashicorp.nomad.plugins.drivers.base.proto.Device")
	proto.RegisterType((*StartTaskResponse)(nil), "hashicorp.nomad.plugins.drivers.base.proto.StartTaskResponse")
	proto.RegisterType((*TaskHandle)(nil), "hashicorp.nomad.plugins.drivers.base.proto.TaskHandle")
	proto.RegisterType((*WaitTaskRequest)(nil), "hashicorp.nomad.plugins.drivers.base.proto.WaitTaskRequest")
	proto.RegisterType((*WaitTaskResponse)(nil), "hashicorp.nomad.plugins.drivers.base.proto.WaitTaskResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DriverClient is the client API for Driver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DriverClient interface {
	RecoverTask(ctx context.Context, in *RecoverTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	StartTask(ctx context.Context, in *StartTaskRequest, opts ...grpc.CallOption) (*StartTaskResponse, error)
	WaitTask(ctx context.Context, in *WaitTaskRequest, opts ...grpc.CallOption) (*WaitTaskResponse, error)
}

type driverClient struct {
	cc *grpc.ClientConn
}

func NewDriverClient(cc *grpc.ClientConn) DriverClient {
	return &driverClient{cc}
}

func (c *driverClient) RecoverTask(ctx context.Context, in *RecoverTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/hashicorp.nomad.plugins.drivers.base.proto.Driver/RecoverTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *driverClient) StartTask(ctx context.Context, in *StartTaskRequest, opts ...grpc.CallOption) (*StartTaskResponse, error) {
	out := new(StartTaskResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.nomad.plugins.drivers.base.proto.Driver/StartTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *driverClient) WaitTask(ctx context.Context, in *WaitTaskRequest, opts ...grpc.CallOption) (*WaitTaskResponse, error) {
	out := new(WaitTaskResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.nomad.plugins.drivers.base.proto.Driver/WaitTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DriverServer is the server API for Driver service.
type DriverServer interface {
	RecoverTask(context.Context, *RecoverTaskRequest) (*empty.Empty, error)
	StartTask(context.Context, *StartTaskRequest) (*StartTaskResponse, error)
	WaitTask(context.Context, *WaitTaskRequest) (*WaitTaskResponse, error)
}

func RegisterDriverServer(s *grpc.Server, srv DriverServer) {
	s.RegisterService(&_Driver_serviceDesc, srv)
}

func _Driver_RecoverTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriverServer).RecoverTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.nomad.plugins.drivers.base.proto.Driver/RecoverTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriverServer).RecoverTask(ctx, req.(*RecoverTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Driver_StartTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriverServer).StartTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.nomad.plugins.drivers.base.proto.Driver/StartTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriverServer).StartTask(ctx, req.(*StartTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Driver_WaitTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriverServer).WaitTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.nomad.plugins.drivers.base.proto.Driver/WaitTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriverServer).WaitTask(ctx, req.(*WaitTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Driver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hashicorp.nomad.plugins.drivers.base.proto.Driver",
	HandlerType: (*DriverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecoverTask",
			Handler:    _Driver_RecoverTask_Handler,
		},
		{
			MethodName: "StartTask",
			Handler:    _Driver_StartTask_Handler,
		},
		{
			MethodName: "WaitTask",
			Handler:    _Driver_WaitTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "driver.proto",
}

func init() { proto.RegisterFile("driver.proto", fileDescriptor_driver_54fd5cea61d6363e) }

var fileDescriptor_driver_54fd5cea61d6363e = []byte{
	// 798 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x5e, 0xc7, 0x89, 0x63, 0x9f, 0x2c, 0x50, 0x86, 0xdd, 0xc5, 0x4a, 0x85, 0x88, 0x7c, 0x15,
	0xed, 0x85, 0x97, 0x06, 0x51, 0x21, 0x28, 0x20, 0xfa, 0x23, 0x51, 0xd4, 0xa2, 0x76, 0x82, 0x84,
	0x40, 0x02, 0x6b, 0x6a, 0x4f, 0x93, 0x69, 0x62, 0x8f, 0x3b, 0x33, 0x8e, 0xc8, 0x05, 0xd7, 0x20,
	0x9e, 0x89, 0x57, 0xe1, 0x59, 0x40, 0x33, 0x63, 0xa7, 0x21, 0x57, 0x4d, 0xca, 0x95, 0x7d, 0xfe,
	0xbe, 0xf3, 0x67, 0x7f, 0x07, 0x9e, 0x67, 0x82, 0x2d, 0xa8, 0x88, 0x4b, 0xc1, 0x15, 0x47, 0xaf,
	0xa7, 0x44, 0x4e, 0x59, 0xca, 0x45, 0x19, 0x17, 0x3c, 0x27, 0x59, 0x5c, 0xce, 0xab, 0x09, 0x2b,
	0x64, 0x6c, 0xbd, 0x64, 0x7c, 0x43, 0x24, 0xb5, 0xbe, 0xfd, 0xfd, 0x09, 0xe7, 0x93, 0x39, 0x7d,
	0x63, 0xa4, 0x9b, 0xea, 0xf6, 0x0d, 0xcd, 0x4b, 0xb5, 0xb4, 0xc6, 0xe8, 0x37, 0x40, 0x98, 0xa6,
	0x7c, 0x41, 0xc5, 0xf7, 0x44, 0xce, 0x30, 0xbd, 0xaf, 0xa8, 0x54, 0xe8, 0x7d, 0xe8, 0x2a, 0x22,
	0x67, 0x09, 0xcb, 0x42, 0x67, 0xe0, 0x0c, 0x03, 0xec, 0x69, 0xf1, 0x3c, 0x43, 0xdf, 0x81, 0x37,
	0x25, 0x45, 0x36, 0xa7, 0x61, 0x6b, 0xe0, 0x0c, 0x7b, 0xa3, 0xc3, 0xf8, 0xf1, 0x85, 0xc4, 0x3a,
	0xc3, 0x37, 0x26, 0x1a, 0xd7, 0x28, 0xd1, 0x2f, 0xb0, 0x37, 0x56, 0x44, 0xa8, 0xf5, 0xe4, 0xdf,
	0x42, 0x5b, 0x67, 0x33, 0x99, 0x77, 0xc8, 0x70, 0xc2, 0x8b, 0x5b, 0x36, 0xc1, 0x06, 0x23, 0xfa,
	0xdb, 0x05, 0x78, 0x50, 0xa2, 0xb7, 0xa1, 0xb5, 0x6a, 0xa9, 0xc5, 0x32, 0x84, 0xa0, 0x5d, 0x49,
	0x2a, 0x4c, 0x33, 0x01, 0x36, 0xef, 0x68, 0x04, 0x2f, 0x73, 0x39, 0x29, 0x49, 0x3a, 0x4b, 0x6c,
	0x86, 0x24, 0x35, 0xc1, 0xa1, 0x3b, 0x70, 0x86, 0xcf, 0xf1, 0x7b, 0xb5, 0xf1, 0xd4, 0xd8, 0x6a,
	0xdc, 0x6b, 0x70, 0x69, 0xb1, 0x08, 0xdb, 0x03, 0x77, 0xd8, 0x1b, 0x7d, 0xb5, 0x5b, 0xc5, 0xf1,
	0x59, 0xb1, 0x38, 0x2b, 0x94, 0x58, 0x62, 0x8d, 0x85, 0xc6, 0x10, 0x08, 0x2a, 0x79, 0x25, 0x52,
	0x2a, 0xc3, 0x8e, 0x19, 0xc5, 0x27, 0xdb, 0x00, 0xe3, 0x26, 0x18, 0x3f, 0xe0, 0xa0, 0x73, 0xf0,
	0x72, 0x5e, 0x15, 0x4a, 0x86, 0x9e, 0x29, 0xf5, 0x60, 0x1b, 0xc4, 0x4b, 0x1d, 0x89, 0x6b, 0x00,
	0x74, 0x01, 0xdd, 0x8c, 0x2e, 0x98, 0xae, 0xae, 0x6b, 0xb0, 0x46, 0xdb, 0x60, 0x9d, 0x9a, 0x50,
	0xdc, 0x40, 0xf4, 0x0f, 0xc1, 0x6f, 0xda, 0x47, 0x7b, 0xe0, 0xce, 0xe8, 0xb2, 0xde, 0x92, 0x7e,
	0x45, 0x2f, 0xa0, 0xb3, 0x20, 0xf3, 0x8a, 0xd6, 0x7b, 0xb2, 0xc2, 0x67, 0xad, 0x4f, 0x9d, 0xe8,
	0x1f, 0x07, 0x82, 0x55, 0xa7, 0xe8, 0x03, 0x80, 0xb4, 0xac, 0x92, 0x92, 0x0a, 0xc6, 0xed, 0x9a,
	0x5d, 0x1c, 0xa4, 0x65, 0x75, 0x65, 0x14, 0x68, 0x1f, 0xb4, 0x90, 0xdc, 0x57, 0x5c, 0x11, 0x03,
	0xe5, 0x62, 0x3f, 0x2d, 0xab, 0x6b, 0x2d, 0x37, 0xb1, 0x72, 0x4a, 0x04, 0x95, 0x66, 0xd7, 0x36,
	0x76, 0x6c, 0x14, 0xe8, 0x00, 0x5e, 0xe6, 0x34, 0xe7, 0x62, 0x99, 0xcc, 0x59, 0xce, 0x54, 0xc2,
	0x8a, 0xe4, 0x66, 0xa9, 0xa8, 0x0c, 0xdb, 0xc6, 0x13, 0x59, 0xe3, 0x85, 0xb6, 0x9d, 0x17, 0xc7,
	0xda, 0x82, 0x22, 0x78, 0x8b, 0xf3, 0x3c, 0x91, 0x29, 0x17, 0x34, 0x21, 0xd9, 0x9d, 0xd9, 0xa2,
	0x8b, 0x7b, 0x9c, 0xe7, 0x63, 0xad, 0xfb, 0x3a, 0xbb, 0x43, 0x1f, 0x42, 0x2f, 0x2d, 0x2b, 0x49,
	0x55, 0xa2, 0x1f, 0xa1, 0x67, 0xfa, 0x03, 0xab, 0x3a, 0x29, 0x2b, 0xb9, 0xe6, 0x90, 0xd3, 0x5c,
	0x8f, 0x7a, 0xcd, 0xe1, 0x92, 0xe6, 0x32, 0xfa, 0x19, 0x3a, 0x66, 0x31, 0xba, 0x3b, 0xf3, 0xcf,
	0x96, 0x44, 0x4d, 0xeb, 0xe1, 0xf9, 0x5a, 0x71, 0x45, 0xd4, 0x54, 0x1b, 0xa7, 0x5c, 0x2a, 0x6b,
	0xb4, 0x53, 0xf4, 0xb5, 0xc2, 0x18, 0xfb, 0xe0, 0x0b, 0x4a, 0x32, 0x5e, 0xcc, 0x97, 0xa6, 0x71,
	0x1f, 0xaf, 0xe4, 0x28, 0x03, 0xcf, 0xee, 0xea, 0x09, 0xf8, 0x03, 0xe8, 0x95, 0x54, 0xe4, 0x4c,
	0x4a, 0xc6, 0x0b, 0x3b, 0xdb, 0x00, 0xaf, 0xab, 0xa2, 0x14, 0xde, 0x5d, 0xa3, 0x01, 0x59, 0xf2,
	0x42, 0xd2, 0x35, 0xae, 0x71, 0xfe, 0x17, 0xae, 0xf9, 0xcb, 0xb1, 0x5c, 0x60, 0xd5, 0xe8, 0x15,
	0x78, 0x36, 0xae, 0xa1, 0x38, 0x2b, 0xe9, 0xb4, 0xf5, 0x0f, 0xdf, 0x7a, 0x12, 0x01, 0xd5, 0x28,
	0xfa, 0xe3, 0x95, 0x8a, 0x28, 0x5a, 0xf7, 0x6d, 0x05, 0xf4, 0x11, 0xbc, 0xd8, 0x60, 0x19, 0xeb,
	0xd4, 0x36, 0x24, 0x83, 0xfe, 0x43, 0x32, 0x63, 0x6d, 0x89, 0x5e, 0xc3, 0x3b, 0x3f, 0x10, 0xa6,
	0x1e, 0x43, 0xd3, 0xd1, 0x8f, 0xb0, 0xf7, 0xe0, 0x5b, 0x8f, 0x73, 0x1f, 0x02, 0xfa, 0x2b, 0x53,
	0x49, 0xca, 0x33, 0x3b, 0xd1, 0x0e, 0xf6, 0xb5, 0xe2, 0x84, 0x67, 0x66, 0x18, 0x92, 0x4d, 0x0a,
	0x32, 0x37, 0x4d, 0x77, 0x70, 0x2d, 0xe9, 0x7f, 0x91, 0x0a, 0x51, 0x97, 0xae, 0x5f, 0x47, 0x7f,
	0xb8, 0xe0, 0xd9, 0xb2, 0xd0, 0x04, 0x7a, 0x6b, 0xb7, 0x03, 0x7d, 0xb9, 0x1d, 0x3d, 0x6d, 0x1e,
	0x9d, 0xfe, 0xab, 0xd8, 0x1e, 0xaa, 0xb8, 0x39, 0x54, 0xf1, 0x99, 0x3e, 0x54, 0xd1, 0x33, 0xf4,
	0xa7, 0x03, 0xc1, 0xea, 0xfb, 0x40, 0x47, 0xdb, 0xe4, 0xd9, 0xbc, 0x2e, 0xfd, 0x2f, 0x76, 0x8c,
	0xb6, 0x53, 0x8c, 0x9e, 0xa1, 0xdf, 0x1d, 0xf0, 0x9b, 0xe1, 0xa2, 0xcf, 0xb7, 0x41, 0xdb, 0x58,
	0x5f, 0xff, 0x68, 0xb7, 0xe0, 0xa6, 0x92, 0xe3, 0xee, 0x4f, 0x1d, 0x3b, 0x2a, 0xcf, 0x3c, 0x3e,
	0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x1a, 0xb5, 0xf7, 0x24, 0x08, 0x00, 0x00,
}
